name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # Whenever the file packages-lock.json change, a new hashed is generated
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      # If a cache already exists, than cache is used, instand of creating new (Note: The keys must be the same). In this case, is already created by "test" job.
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }} # Whenever the file packages-lock.json change, a new hashed is generated
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist # Where the file will stored
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get built artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files # The same name used in Upload artifacts
          path: dist
      - name: Output content
        run: ls
      - name: Output filename
        run: echo "${{needs.build.outputs.script-file}}"
      - name: Deploy
        run: echo "Deploying..."
